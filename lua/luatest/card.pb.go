// Code generated by protoc-gen-go.
// source: card.proto
// DO NOT EDIT!

package luatest

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type CardSkill struct {
	Type             *int32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Level            *int32  `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	Id               []int32 `protobuf:"varint,3,rep,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CardSkill) Reset()         { *m = CardSkill{} }
func (m *CardSkill) String() string { return proto.CompactTextString(m) }
func (*CardSkill) ProtoMessage()    {}

func (m *CardSkill) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CardSkill) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CardSkill) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CardSkill) SetType(value int32) {
	m.Type = proto.Int32(value)
}

func (m *CardSkill) SetLevel(value int32) {
	m.Level = proto.Int32(value)
}

func (m *CardSkill) AddId(value int32) {
	m.Id = append(m.Id, value)
}

type CardInfo struct {
	Id               *int32       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Weapon1          *int32       `protobuf:"varint,3,opt,name=weapon1" json:"weapon1,omitempty"`
	Weapon2          *int32       `protobuf:"varint,4,opt,name=weapon2" json:"weapon2,omitempty"`
	Skills           []*CardSkill `protobuf:"bytes,5,rep,name=skills" json:"skills,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CardInfo) Reset()         { *m = CardInfo{} }
func (m *CardInfo) String() string { return proto.CompactTextString(m) }
func (*CardInfo) ProtoMessage()    {}

func (m *CardInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CardInfo) GetWeapon1() int32 {
	if m != nil && m.Weapon1 != nil {
		return *m.Weapon1
	}
	return 0
}

func (m *CardInfo) GetWeapon2() int32 {
	if m != nil && m.Weapon2 != nil {
		return *m.Weapon2
	}
	return 0
}

func (m *CardInfo) GetSkills() []*CardSkill {
	if m != nil {
		return m.Skills
	}
	return nil
}

func (m *CardInfo) SetId(value int32) {
	m.Id = proto.Int32(value)
}

func (m *CardInfo) SetWeapon1(value int32) {
	m.Weapon1 = proto.Int32(value)
}

func (m *CardInfo) SetWeapon2(value int32) {
	m.Weapon2 = proto.Int32(value)
}

func (m *CardInfo) AddSkills(value *CardSkill) {
	m.Skills = append(m.Skills, value)
}

type CardBagSC struct {
	Cards            []*CardInfo `protobuf:"bytes,1,rep,name=cards" json:"cards,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CardBagSC) Reset()         { *m = CardBagSC{} }
func (m *CardBagSC) String() string { return proto.CompactTextString(m) }
func (*CardBagSC) ProtoMessage()    {}

func (m *CardBagSC) GetCards() []*CardInfo {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *CardBagSC) AddCards(value *CardInfo) {
	m.Cards = append(m.Cards, value)
}

type CardUpdateSC struct {
	Card             *CardInfo `protobuf:"bytes,1,opt,name=card" json:"card,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CardUpdateSC) Reset()         { *m = CardUpdateSC{} }
func (m *CardUpdateSC) String() string { return proto.CompactTextString(m) }
func (*CardUpdateSC) ProtoMessage()    {}

func (m *CardUpdateSC) GetCard() *CardInfo {
	if m != nil {
		return m.Card
	}
	return nil
}

func (m *CardUpdateSC) MutableCard() *CardInfo {
	if m != nil {
		if m.Card == nil {
			m.Card = &CardInfo{}
		}
		return m.Card
	}
	return nil
}

type CardUnlockCS struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SkillType        *int32 `protobuf:"varint,2,opt,name=skillType" json:"skillType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CardUnlockCS) Reset()         { *m = CardUnlockCS{} }
func (m *CardUnlockCS) String() string { return proto.CompactTextString(m) }
func (*CardUnlockCS) ProtoMessage()    {}

func (m *CardUnlockCS) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CardUnlockCS) GetSkillType() int32 {
	if m != nil && m.SkillType != nil {
		return *m.SkillType
	}
	return 0
}

func (m *CardUnlockCS) SetId(value int32) {
	m.Id = proto.Int32(value)
}

func (m *CardUnlockCS) SetSkillType(value int32) {
	m.SkillType = proto.Int32(value)
}

type CardUnlockSC struct {
	Ret              *ErrId `protobuf:"varint,1,opt,name=ret,enum=api.ErrId" json:"ret,omitempty"`
	Id               *int32 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	SkillType        *int32 `protobuf:"varint,3,opt,name=skillType" json:"skillType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CardUnlockSC) Reset()         { *m = CardUnlockSC{} }
func (m *CardUnlockSC) String() string { return proto.CompactTextString(m) }
func (*CardUnlockSC) ProtoMessage()    {}

func (m *CardUnlockSC) GetRet() ErrId {
	if m != nil && m.Ret != nil {
		return *m.Ret
	}
	return ErrId_OK
}

func (m *CardUnlockSC) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CardUnlockSC) GetSkillType() int32 {
	if m != nil && m.SkillType != nil {
		return *m.SkillType
	}
	return 0
}

func (m *CardUnlockSC) SetId(value int32) {
	m.Id = proto.Int32(value)
}

func (m *CardUnlockSC) SetSkillType(value int32) {
	m.SkillType = proto.Int32(value)
}

type CardUpLevelCS struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SkillType        *int32 `protobuf:"varint,2,opt,name=skillType" json:"skillType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CardUpLevelCS) Reset()         { *m = CardUpLevelCS{} }
func (m *CardUpLevelCS) String() string { return proto.CompactTextString(m) }
func (*CardUpLevelCS) ProtoMessage()    {}

func (m *CardUpLevelCS) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CardUpLevelCS) GetSkillType() int32 {
	if m != nil && m.SkillType != nil {
		return *m.SkillType
	}
	return 0
}

func (m *CardUpLevelCS) SetId(value int32) {
	m.Id = proto.Int32(value)
}

func (m *CardUpLevelCS) SetSkillType(value int32) {
	m.SkillType = proto.Int32(value)
}

type CardUpLevelSC struct {
	Ret              *ErrId `protobuf:"varint,1,opt,name=ret,enum=api.ErrId" json:"ret,omitempty"`
	Id               *int32 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	SkillType        *int32 `protobuf:"varint,3,opt,name=skillType" json:"skillType,omitempty"`
	OldLevel         *int32 `protobuf:"varint,4,opt,name=oldLevel" json:"oldLevel,omitempty"`
	NewLevel         *int32 `protobuf:"varint,5,opt,name=newLevel" json:"newLevel,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CardUpLevelSC) Reset()         { *m = CardUpLevelSC{} }
func (m *CardUpLevelSC) String() string { return proto.CompactTextString(m) }
func (*CardUpLevelSC) ProtoMessage()    {}

func (m *CardUpLevelSC) GetRet() ErrId {
	if m != nil && m.Ret != nil {
		return *m.Ret
	}
	return ErrId_OK
}

func (m *CardUpLevelSC) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CardUpLevelSC) GetSkillType() int32 {
	if m != nil && m.SkillType != nil {
		return *m.SkillType
	}
	return 0
}

func (m *CardUpLevelSC) GetOldLevel() int32 {
	if m != nil && m.OldLevel != nil {
		return *m.OldLevel
	}
	return 0
}

func (m *CardUpLevelSC) GetNewLevel() int32 {
	if m != nil && m.NewLevel != nil {
		return *m.NewLevel
	}
	return 0
}

func (m *CardUpLevelSC) SetId(value int32) {
	m.Id = proto.Int32(value)
}

func (m *CardUpLevelSC) SetSkillType(value int32) {
	m.SkillType = proto.Int32(value)
}

func (m *CardUpLevelSC) SetOldLevel(value int32) {
	m.OldLevel = proto.Int32(value)
}

func (m *CardUpLevelSC) SetNewLevel(value int32) {
	m.NewLevel = proto.Int32(value)
}

type CardSkillSelectCS struct {
	CardId           *int32 `protobuf:"varint,1,opt,name=cardId" json:"cardId,omitempty"`
	SkillType        *int32 `protobuf:"varint,2,opt,name=skillType" json:"skillType,omitempty"`
	SkillId          *int32 `protobuf:"varint,3,opt,name=skillId" json:"skillId,omitempty"`
	DelSkillId       *int32 `protobuf:"varint,4,opt,name=delSkillId" json:"delSkillId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CardSkillSelectCS) Reset()         { *m = CardSkillSelectCS{} }
func (m *CardSkillSelectCS) String() string { return proto.CompactTextString(m) }
func (*CardSkillSelectCS) ProtoMessage()    {}

func (m *CardSkillSelectCS) GetCardId() int32 {
	if m != nil && m.CardId != nil {
		return *m.CardId
	}
	return 0
}

func (m *CardSkillSelectCS) GetSkillType() int32 {
	if m != nil && m.SkillType != nil {
		return *m.SkillType
	}
	return 0
}

func (m *CardSkillSelectCS) GetSkillId() int32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

func (m *CardSkillSelectCS) GetDelSkillId() int32 {
	if m != nil && m.DelSkillId != nil {
		return *m.DelSkillId
	}
	return 0
}

func (m *CardSkillSelectCS) SetCardId(value int32) {
	m.CardId = proto.Int32(value)
}

func (m *CardSkillSelectCS) SetSkillType(value int32) {
	m.SkillType = proto.Int32(value)
}

func (m *CardSkillSelectCS) SetSkillId(value int32) {
	m.SkillId = proto.Int32(value)
}

func (m *CardSkillSelectCS) SetDelSkillId(value int32) {
	m.DelSkillId = proto.Int32(value)
}

type CardSkillSelectSC struct {
	Ret              *ErrId `protobuf:"varint,1,opt,name=ret,enum=api.ErrId" json:"ret,omitempty"`
	CardId           *int32 `protobuf:"varint,2,opt,name=cardId" json:"cardId,omitempty"`
	SkillType        *int32 `protobuf:"varint,3,opt,name=skillType" json:"skillType,omitempty"`
	SkillId          *int32 `protobuf:"varint,4,opt,name=skillId" json:"skillId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CardSkillSelectSC) Reset()         { *m = CardSkillSelectSC{} }
func (m *CardSkillSelectSC) String() string { return proto.CompactTextString(m) }
func (*CardSkillSelectSC) ProtoMessage()    {}

func (m *CardSkillSelectSC) GetRet() ErrId {
	if m != nil && m.Ret != nil {
		return *m.Ret
	}
	return ErrId_OK
}

func (m *CardSkillSelectSC) GetCardId() int32 {
	if m != nil && m.CardId != nil {
		return *m.CardId
	}
	return 0
}

func (m *CardSkillSelectSC) GetSkillType() int32 {
	if m != nil && m.SkillType != nil {
		return *m.SkillType
	}
	return 0
}

func (m *CardSkillSelectSC) GetSkillId() int32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

func (m *CardSkillSelectSC) SetCardId(value int32) {
	m.CardId = proto.Int32(value)
}

func (m *CardSkillSelectSC) SetSkillType(value int32) {
	m.SkillType = proto.Int32(value)
}

func (m *CardSkillSelectSC) SetSkillId(value int32) {
	m.SkillId = proto.Int32(value)
}

func init() {
}
